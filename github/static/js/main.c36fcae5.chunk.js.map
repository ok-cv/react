{"version":3,"sources":["Pages/AboutPage/AboutPage.jsx","Pages/UserPage/UserPage.jsx","Components/Search/Search.jsx","Components/Tabs/Tabs.jsx","Components/UserItem/UserItem.jsx","Components/Users/Users.jsx","Components/Inputs/TextInput/TextInput.jsx","App.js","index.js"],"names":["AboutPage","className","map","cur","i","DATE","val","Intl","DateTimeFormat","day","month","year","format","Date","UserPage","getUser","getUserRepos","user","repos","languages","loading","repoLoading","match","useEffect","params","username","to","src","avatar_url","login","name","location","bio","blog","href","html_url","followers","following","public_repos","public_gists","hireable","created_at","length","Object","entries","percentages","index","key","value","style","width","repo","description","languages_fetched","keys","updated_at","stargazers_count","forks_count","Search","getUsers","clearUsers","showClear","input","setInput","useState","query","onSubmit","e","preventDefault","alert","onChange","handleChange","label","onClick","Tabs","exact","activeClassName","UserItem","Users","users","id","TextInput","target","type","placeholder","App","setUsers","setUser","setRepos","setLanguages","langs","total","setLoading","setRepoLoading","async","call","fetch","json","items","getUserReposLanguages","newLangState","call_lang","languages_url","json_lang","forEach","entry","langName","langCount","hasOwnProperty","Math","abs","toFixed","path","render","routerProps","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c36fcae5.chunk.js","sourcesContent":["import React from 'react'\n\nconst AboutPage = () => {\n  const stack = ['React 17', 'Router 5', 'GitHub API']\n\n  return (\n    <div className=\"container w-300 py-5\">\n      <ul className=\"list-group\">\n        {\n          stack.map((cur, i) => (\n            <li className=\"list-group-item bg-light\" key={i}>{cur}</li>\n          ))\n        }\n      </ul>\n    </div>\n  )\n}\n\nexport default AboutPage\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst DATE = (val) => new Intl.DateTimeFormat('de-DE', { day: '2-digit', month: '2-digit', year: 'numeric' }).format(new Date(val))\n\nconst UserPage = ({ getUser, getUserRepos, user, repos, languages, loading, repoLoading, match }) => {\n  useEffect(() => {\n    getUser(match.params.username)\n    getUserRepos(match.params.username)\n  }, [])\n\n  if (loading) {\n    return <div>Loading...</div>\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <Link to=\"/\" className=\"btn btn-primary mb-3\">Back to Search</Link>\n      </div>\n      <div className=\"col-12 col-lg-3\">\n        <div className=\"card\">\n          <img src={user.avatar_url} className=\"card-img-top\" />\n          <div className=\"card-body\">\n            <table className=\"table table-striped\">\n              <tbody>\n                <tr>\n                  <td>Username</td>\n                  <td>{user.login}</td>\n                </tr>\n                <tr>\n                  <td>Name</td>\n                  <td>{user.name}</td>\n                </tr>\n                <tr>\n                  <td>Location</td>\n                  <td>{user.location}</td>\n                </tr>\n                <tr>\n                  <td>Bio</td>\n                  <td>{user.bio}</td>\n                </tr>\n                <tr>\n                  <td>Blog</td>\n                  <td className=\"text-break\">{user.blog}</td>\n                </tr>\n                <tr>\n                  <td>Link</td>\n                  <td><a href={user.html_url}>Open on GitHub</a></td>\n                </tr>\n                <tr>\n                  <td>Followers</td>\n                  <td>{user.followers}</td>\n                </tr>\n                <tr>\n                  <td>Following</td>\n                  <td>{user.following}</td>\n                </tr>\n                <tr>\n                  <td>Repos</td>\n                  <td>{user.public_repos}</td>\n                </tr>\n                <tr>\n                  <td>Gists</td>\n                  <td>{user.public_gists}</td>\n                </tr>\n                <tr>\n                  <td>Hireable</td>\n                  <td>{user.hireable ? 'Yes' : 'No'}</td>\n                </tr>\n                <tr>\n                  <td>Since</td>\n                  <td>{user.created_at && DATE(user.created_at)}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-9\">\n        <h2 className=\"mb-4\">Languages in {repos.length} recently updated repos</h2>\n        {\n          Object.entries(languages.percentages).length !== 0 ?\n          Object.entries(languages.percentages).map(([key, value], index) => (\n            <div key={index}>\n              {key}: {value} %\n              <div key={index} className=\"progress\">\n                <div className=\"progress-bar\" style={{ width: `${value}%` }}></div>\n              </div>\n            </div>\n          )) :\n          <div className=\"\">Language percentages not calculated.</div>\n        }\n        <h2 className=\"my-4\">{repos.length} recently updated repos</h2>\n        {repoLoading && <div>Repo loading...</div>}\n        <div className=\"row\">\n          {\n            repos.map((repo, index) => (\n              <div key={index} className=\"col-12\">\n                <div className=\"\">\n                  <div className=\"\">\n                    <div className=\"text-center\">\n                      <h3>\n                        {repo.name}\n                      </h3>\n                      <p className=\"mt-2\">\n                        {repo.description || 'No description'}\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"\">\n                    <table className=\"table table-striped\">\n                      <tbody>\n                        <tr>\n                          <td>Link</td>\n                          <td><a href={repo.html_url} className=\"\">Open on GitHub</a></td>\n                        </tr>\n                        <tr>\n                          <td>Languages</td>\n                          <td>\n                            {\n                              repo.languages_fetched\n                              ? Object.keys(repo.languages_fetched).map((cur, i) => (i !== 0 ? ', ' : '') + cur)\n                              : <div className=\"\">Languages not fetched.</div>\n                            }\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Created</td>\n                          <td>{repo.created_at && DATE(repo.created_at)}</td>\n                        </tr>\n                        <tr>\n                          <td>Updated</td>\n                          <td>{repo.updated_at && DATE(repo.updated_at)}</td>\n                        </tr>\n                        <tr>\n                          <td>Stars</td>\n                          <td>{repo.stargazers_count}</td>\n                        </tr>\n                        <tr>\n                          <td>Forks</td>\n                          <td>{repo.forks_count}</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UserPage\n","import React, { useEffect, useState } from 'react'\n\nimport { TextInput } from 'Components'\n\nconst Search = ({ getUsers, clearUsers, showClear }) => {\n  const [input, setInput] = useState({ query: 'solidjs' })\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (input.query !== '') {\n      getUsers(input.query)\n    } else {\n      alert('Input is empty')\n    }\n  }\n\n  const handleChange = (name, value) => setInput({ [name]: value })\n\n  const handleClear = () => {\n    setInput({ query: '' })\n\n    clearUsers()\n  }\n\n  useEffect(() => {\n    getUsers('solidjs')\n  }, [])\n\n  return (\n    <form onSubmit={handleSubmit} className=\"mb-5\">\n      <div className=\"row align-items-center\">\n        <div className=\"col-12 col-lg\">\n          <TextInput\n            value={input.query}\n            onChange={(name, value) => handleChange(name, value)}\n            label=\"Username\"\n            name=\"query\"\n          />\n        </div>\n        <div className=\"col-12 col-lg-auto\">\n          <button className=\"btn btn-block btn-primary\">Fetch Users</button>\n        </div>\n        {\n          showClear\n          ? (\n            <div className=\"col-12 col-lg-auto\">\n              <button onClick={handleClear} className=\"btn btn-block btn-secondary\">Clear Users</button>\n            </div>\n          )\n          : null\n        }\n      </div>\n    </form>\n  )\n}\n\nexport default Search\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst Tabs = () => (\n  <div className=\"react-pills\">\n    <NavLink exact to=\"/\" activeClassName=\"active\">Home</NavLink>\n    <NavLink exact to=\"/about\" activeClassName=\"active\">About</NavLink>\n  </div>\n)\n\nexport default Tabs\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst UserItem = ({ user: { login, avatar_url } }) => (\n  <div className=\"col-12 col-lg-2\">\n    <div className=\"card\">\n      <img src={avatar_url} className=\"card-img-top\" />\n      <div className=\"card-body\">\n        <div className=\"card-title\">{login}</div>\n        <Link to={`/user/${login}`} className=\"btn btn-sm btn-primary\">Open Profile</Link>\n      </div>\n    </div>\n  </div>\n)\n\nexport default UserItem\n","import React from 'react'\n\nimport { UserItem } from 'Components'\n\nconst Users = ({ users, loading }) => {\n  if (loading) {\n    return <div>Loading...</div>\n  }\n\n  return (\n    <div className=\"row gy-4\">\n      {\n        users.map((user) => (\n          <UserItem key={user.id} user={user} />\n        ))\n      }\n    </div>\n  )\n}\n\nexport default Users\n","import React from 'react'\n\nconst TextInput = ({ value, onChange, label, name }) => {\n  const handleChange = (e) => onChange(name, e.target.value)\n\n  return (\n    <div className=\"form-floating\">\n      <input className=\"form-control\" value={value} onChange={handleChange} type=\"text\" placeholder=\" \" />\n      <label>{label}</label>\n    </div>\n  )\n}\n\nexport default TextInput\n","import React, { useState } from 'react'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport { AboutPage, UserPage } from 'Pages'\nimport { Search, Tabs, Users } from 'Components'\n\nconst CLIENT_ID = ''\nconst CLIENT_SECRET = ''\n\nconst App = () => {\n  const [users, setUsers] = useState([])\n  const [user, setUser] = useState({})\n  const [repos, setRepos] = useState([])\n  const [languages, setLanguages] = useState({ langs: {}, percentages: {}, total: 0 })\n  const [loading, setLoading] = useState(false)\n  const [repoLoading, setRepoLoading] = useState(false)\n\n  const getUsers = async (query) => {\n    setLoading(true)\n\n    const call = await fetch(`https://api.github.com/search/users?q=${query}&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`)\n    const json = await call.json()\n\n    setUsers(json.items)\n    setLoading(false)\n  }\n\n  const getUser = async (query) => {\n    setLoading(true)\n\n    const call = await fetch(`https://api.github.com/users/${query}?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`)\n    const json = await call.json()\n\n    setUser(json)\n    setLoading(false)\n  }\n\n  const getUserRepos = async (query) => {\n    setRepoLoading(true)\n\n    const repo_count = 3;\n    const repo_sort = 'pushed';\n    const repo_direction = 'desc';\n\n    const call = await fetch(`https://api.github.com/users/${query}/repos?per_page=${repo_count}&sort=${repo_sort}&direction=${repo_direction}&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`)\n    const json = await call.json()\n\n    await getUserReposLanguages(json)\n\n    setRepos(json)\n    setRepoLoading(false)\n  }\n\n  const getUserReposLanguages = async (json) => {\n    const newLangState = {...languages}\n\n    for (const repo of json) {\n      const call_lang = await fetch(`${repo.languages_url}?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`)\n      const json_lang = await call_lang.json()\n\n      repo.languages_fetched = json_lang\n\n      // calc lang\n      Object.entries(repo.languages_fetched).forEach((entry) => {\n        const langName = entry[0]\n        const langCount = entry[1]\n        // add language to state if not already inside. if inside, add only the value\n        if (!(newLangState.langs.hasOwnProperty(langName))) {\n          newLangState.langs[langName] = langCount\n        } else {\n          newLangState.langs[langName] += langCount\n        }\n        // add value to total\n        newLangState.total += langCount\n      })\n    }\n\n    for (const key in newLangState.langs) {\n      if (newLangState.langs.hasOwnProperty(key)) {\n        newLangState.percentages[key] = Math.abs(newLangState.langs[key] / newLangState.total * 100).toFixed(2);\n      }\n    }\n\n    setLanguages(newLangState)\n  }\n\n  const clearUsers = () => {\n    setUsers([])\n    setLoading(false)\n  }\n\n  return (\n    <Router>\n      <Tabs />\n      <Switch>\n        <Route exact path=\"/\" render={() => (\n          <div className=\"container py-5\">\n            <Search\n              getUsers={getUsers}\n              clearUsers={clearUsers}\n              showClear={users.length > 0 ? true : false}\n            />\n            <Users users={users} loading={loading} />\n          </div>\n        )} />\n        <Route exact path=\"/user/:username\" render={(routerProps) => (\n          <div className=\"container py-5\">\n            <UserPage\n              getUser={getUser}\n              getUserRepos={getUserRepos}\n              user={user}\n              repos={repos}\n              languages={languages}\n              loading={loading}\n              repoLoading={repoLoading}\n              {...routerProps}\n            />\n          </div>\n        )} />\n        <Route exact path=\"/about\" render={AboutPage} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from 'App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}