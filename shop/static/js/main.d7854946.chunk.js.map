{"version":3,"sources":["Redux/directory.reducer.js","Redux/collection.types.js","Redux/collection.reducer.js","Redux/user.types.js","Redux/user.reducer.js","Redux/cart.types.js","Redux/cart.utils.js","Redux/cart.reducer.js","Redux/root-reducer.js","Redux/store.js","Redux/user.actions.js","Redux/user.selectors.js","Firebase/firebase.utils.js","Pages/AboutPage/AboutPage.jsx","Redux/cart.selectors.js","Redux/cart.actions.js","Components/CartDropdown/CartDropdown.jsx","Components/CartIcon/CartIcon.jsx","Components/CartItem/CartItem.jsx","Components/CheckoutItem/CheckoutItem.jsx","Components/CollectionItem/CollectionItem.jsx","Redux/collection.selectors.js","Components/CollectionOverview/CollectionOverview.jsx","Components/CollectionPreview/CollectionPreview.jsx","Components/CustomButton/CustomButton.jsx","Components/DirectoryItem/DirectoryItem.jsx","Redux/directory.selectors.js","Components/DirectoryMenu/DirectoryMenu.jsx","Components/LoginForm/LoginForm.jsx","Components/RegisterForm/RegisterForm.jsx","Components/Tabs/Tabs.jsx","Components/Inputs/PasswordInput/PasswordInput.jsx","Components/Inputs/TextInput/TextInput.jsx","Pages/CheckoutPage/CheckoutPage.jsx","Pages/CollectionPage/CollectionPage.jsx","Pages/HomePage/HomePage.jsx","Pages/LoginPage/LoginPage.jsx","Pages/RegisterPage/RegisterPage.jsx","Redux/collection.actions.js","Pages/StorePage/StorePage.jsx","App.js","index.js"],"names":["INITIAL_STATE","sections","title","imageUrl","id","linkUrl","directoryReducer","state","action","type","CollectionActionTypes","isFetching","errorMessage","undefined","collectionReducer","payload","UserActionTypes","currentUser","userReducer","CartActionTypes","addItemToCart","cartItems","cartItemToAdd","newCartItemsArray","find","cartItem","map","quantity","removeItemFromCart","cartItemToRemove","filter","clearItemFromCart","cartItemToClear","hidden","cartReducer","persistConfig","key","storage","whitelist","rootReducer","combineReducers","directory","collection","user","cart","persistReducer","middlewares","logger","thunk","store","createStore","applyMiddleware","persistor","persistStore","selectCurrentUser","createSelector","createUserProfileDocument","async","userAuth","additionalData","userRef","firestore","doc","uid","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","AboutPage","className","cur","i","selectCart","selectCartHidden","selectCartItems","selectCartItemsCount","reduce","a","b","selectCartTotal","price","toggleCartHidden","addItem","item","mapState","createStructuredSelector","withRouter","connect","dispatch","history","onClick","push","itemCount","CartItem","name","style","backgroundImage","Intl","NumberFormat","currency","format","removeItem","clearItem","selectCollection","selectCollectionSections","selectCollectionSectionsAsArray","collections","Object","keys","selectIsCollectionFetching","selectIsCollectionLoaded","collectionSectionsArray","otherProps","CollectionPreview","items","_","CustomButton","children","isGoogleSignIn","match","url","selectDirectorySections","directorySections","LoginForm","credentials","setCredentials","useState","password","handleChange","value","onSubmit","e","preventDefault","signInWithEmailAndPassword","onChange","label","RegisterForm","confirmPassword","createUserWithEmailAndPassword","alert","exact","to","activeClassName","signOut","PasswordInput","target","placeholder","TextInput","cartTotal","clearCart","ownProps","collectionUrlParam","params","collectionName","HomePage","LoginPage","RegisterPage","fetchCollectionsStartAsync","collectionRef","then","snapshot","collectionsMap","docs","data","routeName","encodeURI","toLowerCase","acc","fetchCollectionsSuccess","catch","isCollectionFetching","isCollectionLoaded","useEffect","path","component","CollectionOverview","CollectionPage","setCurrentUser","unsubscribeFromAuth","onAuthStateChanged","onSnapshot","StorePage","CheckoutPage","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d7854946.chunk.js","sourcesContent":["const INITIAL_STATE = {\n  sections: [\n    {\n      title: 'Ancient Books',\n      imageUrl: 'https://images.unsplash.com/photo-1535905557558-afc4877a26fc?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80',\n      id: 1,\n      linkUrl: 'store/ancient'\n    },\n    {\n      title: 'Modern Books',\n      imageUrl: 'https://images.unsplash.com/photo-1507842217343-583bb7270b66?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1890&q=80',\n      id: 2,\n      linkUrl: 'store/modern'\n    },\n    {\n      title: 'Used Books',\n      imageUrl: 'https://images.unsplash.com/photo-1476081718509-d5d0b661a376?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80',\n      id: 3,\n      linkUrl: 'store/used'\n    },\n    {\n      title: 'New Books',\n      imageUrl: 'https://images.unsplash.com/photo-1544640808-32ca72ac7f37?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8OHx8bGlicmFyeXxlbnwwfHwwfHw%3D&auto=format&fit=crop&w=800&q=60',\n      id: 4,\n      linkUrl: 'store/new'\n    }\n  ]\n}\n\nconst directoryReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    default:\n      return state\n  }\n}\n\nexport default directoryReducer\n","export const CollectionActionTypes = {\n  FETCH_COLLECTIONS_START: 'FETCH_COLLECTIONS_START',\n  FETCH_COLLECTIONS_SUCCESS: 'FETCH_COLLECTIONS_SUCCESS',\n  FETCH_COLLECTIONS_FAILURE: 'FETCH_COLLECTIONS_FAILURE'\n}\n","import { CollectionActionTypes } from 'Redux/collection.types'\n\nconst INITIAL_STATE = {\n  sections: null,\n  isFetching: false,\n  errorMessage: undefined\n}\n\nconst collectionReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CollectionActionTypes.FETCH_COLLECTIONS_START:\n      return {\n        ...state,\n        isFetching: true\n      }\n    case CollectionActionTypes.FETCH_COLLECTIONS_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        sections: action.payload\n      }\n    case CollectionActionTypes.FETCH_COLLECTIONS_FAILURE:\n      return {\n        ...state,\n        isFetching: false,\n        errorMessage: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport default collectionReducer\n","export const UserActionTypes = {\n  SET_CURRENT_USER: 'SET_CURRENT_USER'\n}\n","import { UserActionTypes } from 'Redux/user.types'\n\nconst INITIAL_STATE = {\n  currentUser: null\n}\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.SET_CURRENT_USER:\n      return {\n        ...state,\n        currentUser: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport default userReducer\n","export const CartActionTypes = {\n  TOGGLE_CART_HIDDEN: 'TOGGLE_CART_HIDDEN',\n  ADD_ITEM: 'ADD_ITEM',\n  REMOVE_ITEM: 'REMOVE_ITEM',\n  CLEAR_ITEM: 'CLEAR_ITEM',\n  CLEAR_CART: 'CLEAR_CART'\n}\n","export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find((cartItem) => cartItem.id === cartItemToAdd.id)\n\n  let newCartItemsArray\n\n  if (existingCartItem) {\n    newCartItemsArray = cartItems.map((cartItem) => (\n      cartItem.id === cartItemToAdd.id ? { ...cartItem, quantity: cartItem.quantity + 1 } : cartItem\n    ))\n  } else {\n    newCartItemsArray = [...cartItems, { ...cartItemToAdd, quantity: 1 }]\n  }\n\n  return newCartItemsArray\n}\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find((cartItem) => cartItem.id === cartItemToRemove.id)\n\n  let newCartItemsArray\n\n  if (existingCartItem.quantity !== 1) {\n    newCartItemsArray = cartItems.map((cartItem) => (\n      cartItem.id === cartItemToRemove.id ? { ...cartItem, quantity: cartItem.quantity - 1 } : cartItem\n    ))\n  } else {\n    newCartItemsArray = cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id)\n  }\n\n  return newCartItemsArray\n}\n\nexport const clearItemFromCart = (cartItems, cartItemToClear) => {\n  let newCartItemsArray\n\n  newCartItemsArray = cartItems.filter((cartItem) => cartItem.id !== cartItemToClear.id)\n\n  return newCartItemsArray\n}\n","import { CartActionTypes } from 'Redux/cart.types'\nimport { addItemToCart, removeItemFromCart, clearItemFromCart } from 'Redux/cart.utils'\n\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n}\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden\n      }\n    case CartActionTypes.ADD_ITEM:\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      }\n    case CartActionTypes.REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      }\n    case CartActionTypes.CLEAR_ITEM:\n      return {\n        ...state,\n        cartItems: clearItemFromCart(state.cartItems, action.payload)\n      }\n    case CartActionTypes.CLEAR_CART:\n      return {\n        ...state,\n        cartItems: []\n      }\n    default:\n      return state\n  }\n}\n\nexport default cartReducer\n","import { combineReducers } from 'redux'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nimport directoryReducer from 'Redux/directory.reducer'\nimport collectionReducer from 'Redux/collection.reducer'\nimport userReducer from 'Redux/user.reducer'\nimport cartReducer from 'Redux/cart.reducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['cart']\n}\n\nconst rootReducer = combineReducers({\n  directory: directoryReducer,\n  collection: collectionReducer,\n  user: userReducer,\n  cart: cartReducer\n})\n\nexport default persistReducer(persistConfig, rootReducer)\n","import { createStore, applyMiddleware } from 'redux'\nimport { persistStore } from 'redux-persist'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nimport rootReducer from 'Redux/root-reducer'\n\nconst middlewares = [logger, thunk]\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\n\nexport const persistor = persistStore(store)\n","import { UserActionTypes } from 'Redux/user.types'\n\nexport const setCurrentUser = (user) => ({\n  type: UserActionTypes.SET_CURRENT_USER,\n  payload: user\n})\n","import { createSelector } from 'reselect'\n\nconst selectUser = (state) => state.user\n\nexport const selectCurrentUser = createSelector(\n  [selectUser],\n  (user) => user.currentUser\n)\n","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nconst config = {\n  apiKey: \"AIzaSyBFhRI7wSxsAgaVIsChy46OFXcEi1qR_-A\",\n  authDomain: \"react-redux-shop-cd7f2.firebaseapp.com\",\n  projectId: \"react-redux-shop-cd7f2\",\n  storageBucket: \"react-redux-shop-cd7f2.appspot.com\",\n  messagingSenderId: \"1096222963957\",\n  appId: \"1:1096222963957:web:9994740a69e5d5770f6dbc\"\n}\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`)\n\n  const snapShot = await userRef.get()\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth\n    const createdAt = new Date()\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      })\n    } catch (error) {\n      console.log('error creating user', error.message)\n    }\n  }\n\n  return userRef\n}\n\n// firebase.initializeApp(config)\n!firebase.apps.length ? firebase.initializeApp(config) : firebase.app()\n\n// export const uploadLocalJsonToFirebase = async (collectionKey, objectToAdd) => {\n//   const collectionRef = firestore.collection(collectionKey)\n\n//   const batch = firestore.batch()\n\n//   objectToAdd.forEach((obj) => {\n//     const newDocRef = collectionRef.doc()\n//     batch.set(newDocRef, obj)\n//   })\n\n//   return await batch.commit()\n// }\n\nexport const convertCollectionsSnapshotToMap = (collections) => {\n  const transformedCollection = collections.docs.map((doc) => {\n    const { title, items } = doc.data()\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    }\n  })\n\n  return transformedCollection.reduce((acc, cur) => {\n    acc[cur.title.toLowerCase()] = cur\n    return acc\n  }, {})\n}\n\nexport const auth = firebase.auth()\nexport const firestore = firebase.firestore()\n\nconst provider = new firebase.auth.GoogleAuthProvider()\nprovider.setCustomParameters({ prompt: 'select_account' })\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\n\nexport default firebase\n","import React from 'react'\n\nconst AboutPage = () => {\n  const stack = ['React 17', 'Router 5', 'Redux', 'Thunk', 'Reselect', 'Firebase', 'Google Sign-In']\n\n  return (\n    <div className=\"container w-300 py-5\">\n      <ul className=\"list-group\">\n        {\n          stack.map((cur, i) => (\n            <li className=\"list-group-item bg-light\" key={i}>{cur}</li>\n          ))\n        }\n      </ul>\n    </div>\n  )\n}\n\nexport default AboutPage\n","import { createSelector } from 'reselect'\n\nconst selectCart = (state) => state.cart\n\nexport const selectCartHidden = createSelector(\n  [selectCart],\n  (cart) => cart.hidden\n)\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  (cart) => cart.cartItems\n)\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems],\n  (cartItems) => cartItems.reduce((a, b) => a + b.quantity, 0)\n)\n\nexport const selectCartTotal = createSelector(\n  [selectCartItems],\n  (cartItems) => cartItems.reduce((a, b) => a + b.quantity * b.price, 0)\n)\n","import { CartActionTypes } from 'Redux/cart.types'\n\nexport const toggleCartHidden = () => ({\n  type: CartActionTypes.TOGGLE_CART_HIDDEN\n})\n\nexport const addItem = (item) => ({\n  type: CartActionTypes.ADD_ITEM,\n  payload: item\n})\n\nexport const removeItem = (item) => ({\n  type: CartActionTypes.REMOVE_ITEM,\n  payload: item\n})\n\nexport const clearItem = (item) => ({\n  type: CartActionTypes.CLEAR_ITEM,\n  payload: item\n})\n\nexport const clearCart = () => ({\n  type: CartActionTypes.CLEAR_CART\n})\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { toggleCartHidden } from 'Redux/cart.actions'\nimport { selectCartItems } from 'Redux/cart.selectors'\nimport { CartItem, CustomButton } from 'Components'\n\nimport './CartDropdown.css'\n\nconst CartDropdown = ({ cartItems, toggleCartHidden, history }) => (\n  <div className=\"cart-dropdown\">\n    <div className=\"cart-dropdown-items\">\n      {\n        cartItems.length > 0\n        ? cartItems.map((cartItem) => <CartItem key={cartItem.id} cartItem={cartItem} />)\n        : 'Cart is empty.'\n      }\n    </div>\n    <CustomButton\n      onClick={() => {\n        history.push('/checkout')\n        toggleCartHidden()\n      }}\n    >Go to Checkout</CustomButton>\n  </div>\n)\n\nconst mapState = createStructuredSelector({\n  cartItems: selectCartItems\n})\n\nconst mapDispatch = (dispatch) => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n})\n\nexport default withRouter(connect(mapState, mapDispatch)(CartDropdown))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { toggleCartHidden } from 'Redux/cart.actions'\nimport { selectCartItemsCount } from 'Redux/cart.selectors'\n\nimport './CartIcon.css'\n\nconst CartIcon = ({ toggleCartHidden, itemCount }) => (\n  <a onClick={toggleCartHidden}>\n    Cart: {itemCount}\n  </a>\n)\n\nconst mapState = createStructuredSelector({\n  itemCount: selectCartItemsCount\n})\n\nconst mapDispatch = (dispatch) => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n})\n\nexport default connect(mapState, mapDispatch)(CartIcon)\n","import React from 'react'\n\nimport './CartItem.css'\n\nconst CartItem = ({ cartItem: { imageUrl, name, price, quantity } }) => (\n  <div className=\"cart-item\">\n    <div className=\"cart-item-image\" style={{ backgroundImage: `url(${imageUrl})` }} />\n    <div className=\"cart-item-info\">\n      {name}\n      <br />\n      {quantity} x {new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(price)}\n    </div>\n  </div>\n)\n\nexport default CartItem\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { addItem, removeItem, clearItem } from 'Redux/cart.actions'\n\nimport './CheckoutItem.css'\n\nconst CheckoutItem = ({ cartItem, addItem, removeItem, clearItem }) => {\n  const { imageUrl, name, price, quantity } = cartItem\n\n  return (\n    <div className=\"checkout-item\">\n      <div className=\"row align-items-center\">\n        <div className=\"col-2\"><div className=\"checkout-image\" style={{ backgroundImage: `url(${imageUrl})` }} /></div>\n        <div className=\"col-3\">{name}</div>\n        <div className=\"col-3\">\n          <div className=\"d-flex align-items-center\">\n            <div className=\"inc-dec\" onClick={() => removeItem(cartItem)}>\n              <div className=\"icon\">\n                <i className=\"bi bi-chevron-left\"></i>\n              </div>\n            </div>\n            <span>{quantity}</span>\n            <div className=\"inc-dec\" onClick={() => addItem(cartItem)}>\n              <div className=\"icon\">\n                <i className=\"bi bi-chevron-right\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-2 text-end\">\n          {new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(price)}\n        </div>\n        <div className=\"col-2\">\n          <div className=\"d-flex justify-content-end\">\n            <a onClick={() => clearItem(cartItem)}>\n              <div className=\"icon\">\n                <i className=\"bi bi-x\"></i>\n              </div>\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapDispatch = (dispatch) => ({\n  addItem: (cartItem) => dispatch(addItem(cartItem)),\n  removeItem: (cartItem) => dispatch(removeItem(cartItem)),\n  clearItem: (cartItem) => dispatch(clearItem(cartItem))\n})\n\nexport default connect(null, mapDispatch)(CheckoutItem)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { addItem } from 'Redux/cart.actions'\nimport { CustomButton } from 'Components'\n\nimport './CollectionItem.css'\n\nconst CollectionItem = ({ item, item: { imageUrl, name, price }, addItem }) => (\n  <div className=\"collection-item\">\n    <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\n    <div className=\"footer\">\n      <div className=\"name\">{name}</div>\n      <div className=\"price\">{new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(price)}</div>\n    </div>\n    <CustomButton onClick={() => addItem(item)}>Add to Cart</CustomButton>\n  </div>\n)\n\nconst mapDispatch = (dispatch) => ({\n  addItem: (item) => dispatch(addItem(item))\n})\n\nexport default connect(null, mapDispatch)(CollectionItem)\n","import { createSelector } from 'reselect'\n\nconst selectCollection = (state) => state.collection\n\nexport const selectCollectionSections = createSelector(\n  [selectCollection],\n  (collection) => collection.sections\n)\n\nexport const selectCollectionSectionsAsArray = createSelector(\n  [selectCollectionSections],\n  (collections) => collections ? Object.keys(collections).map((key) => collections[key]) : []\n)\n\nexport const selectCollectionSection = (collectionUrlParam) => (\n  createSelector(\n    [selectCollectionSections],\n    (collections) => collections ? collections[collectionUrlParam] : null\n  )\n)\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectCollection],\n  (collection) => collection.isFetching\n)\n\nexport const selectIsCollectionLoaded = createSelector(\n  [selectCollection],\n  (collection) => !!collection.sections\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { selectCollectionSectionsAsArray } from 'Redux/collection.selectors'\nimport { CollectionPreview } from 'Components'\n\nconst CollectionOverview = ({ collectionSectionsArray }) => (\n  <>\n    {\n      collectionSectionsArray.map(({ id, ...otherProps }) => (\n        <CollectionPreview key={id} {...otherProps} />\n      ))\n    }\n  </>\n)\n\nconst mapState = createStructuredSelector({\n  collectionSectionsArray: selectCollectionSectionsAsArray\n})\n\nexport default connect(mapState)(CollectionOverview)\n","import React from 'react'\n\nimport { CollectionItem } from 'Components'\n\nimport './CollectionPreview.css'\n\nconst CollectionPreview = ({ title, items }) => (\n  <div className=\"collection-preview\">\n    <div className=\"display-6\">{title}</div>\n    <div className=\"preview\">\n      {\n        items.filter((_, i) => i < 4).map((item) => (\n          <CollectionItem key={item.id} item={item} />\n        ))\n      }\n    </div>\n  </div>\n)\n\nexport default CollectionPreview\n","import React from 'react'\n\nconst CustomButton = ({ children, isGoogleSignIn, ...otherProps }) => (\n  <button className={`btn btn-block ${isGoogleSignIn ? 'btn-secondary' : 'btn-primary'}`} {...otherProps}>\n    {children}\n  </button>\n)\n\nexport default CustomButton\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport './DirectoryItem.css'\n\nconst DirectoryItem = ({ title, imageUrl, linkUrl, match, history }) => (\n  <div\n    className=\"directory-item\"\n    style={{ backgroundImage: `url(${imageUrl})` }}\n    onClick={() => history.push(`${match.url}${linkUrl}`)}\n  >\n    <div className=\"title\">\n      {title}\n    </div>\n  </div>\n)\n\nexport default withRouter(DirectoryItem)\n","import { createSelector } from 'reselect'\n\nconst selectDirectory = (state) => state.directory\n\nexport const selectDirectorySections = createSelector(\n  [selectDirectory],\n  (directory) => directory.sections\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { selectDirectorySections } from 'Redux/directory.selectors'\nimport { DirectoryItem } from 'Components'\n\nimport './DirectoryMenu.css'\n\nconst DirectoryMenu = ({ directorySections }) => (\n  <div className=\"directory-menu\">\n    {\n      directorySections.map(({ id, ...otherProps }) => (\n        <DirectoryItem key={id} {...otherProps} />\n      ))\n    }\n  </div>\n)\n\nconst mapState = createStructuredSelector({\n  directorySections: selectDirectorySections\n})\n\nexport default connect(mapState)(DirectoryMenu)\n","import React, { useState } from 'react'\n\nimport { auth, signInWithGoogle } from 'Firebase/firebase.utils'\nimport { CustomButton, PasswordInput, TextInput } from 'Components'\n\nconst LoginForm = () => {\n  const [credentials, setCredentials] = useState({ email: '', password: '' })\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    try {\n      await auth.signInWithEmailAndPassword(credentials.email, credentials.password)\n\n      setCredentials({ email: '', password: '' })\n    } catch (error) {\n      console.log('error signing in', error.message)\n    }\n  }\n\n  const handleChange = (name, value) => setCredentials({ ...credentials, [name]: value })\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"row gy-4\">\n        <div className=\"col-12\">\n          <div className=\"display-6\">Login</div>\n        </div>\n        <div className=\"col-12\">\n          <TextInput\n            value={credentials.email}\n            onChange={(name, value) => handleChange(name, value)}\n            label=\"E-Mail\"\n            name=\"email\"\n          />\n        </div>\n        <div className=\"col-12\">\n          <PasswordInput\n            value={credentials.password}\n            onChange={(name, value) => handleChange(name, value)}\n            label=\"Password\"\n            name=\"password\"\n          />\n        </div>\n        <div className=\"col-12\">\n          <CustomButton type=\"submit\">Login with E-Mail</CustomButton>\n        </div>\n        <div className=\"col-12\">\n          <CustomButton type=\"button\" onClick={signInWithGoogle} isGoogleSignIn>Login with Google</CustomButton>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default LoginForm\n","import React, { useState } from 'react'\n\nimport { auth, createUserProfileDocument } from 'Firebase/firebase.utils'\nimport { CustomButton, PasswordInput, TextInput } from 'Components'\n\nconst RegisterForm = () => {\n  const [credentials, setCredentials] = useState({ displayName: '', email: '', password: '', confirmPassword: '' })\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (credentials.password !== credentials.confirmPassword) {\n      alert('passwords dont match')\n      return\n    }\n\n    try {\n      const { user } = await auth.createUserWithEmailAndPassword(credentials.email, credentials.password)\n\n      await createUserProfileDocument(user, { displayName: credentials.displayName })\n\n      setCredentials({ displayName: '', email: '', password: '', confirmPassword: '' })\n    } catch (error) {\n      console.log('error signing up', error.message)\n    }\n  }\n\n  const handleChange = (name, value) => setCredentials({ ...credentials, [name]: value })\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"row gy-4\">\n        <div className=\"col-12\">\n          <div className=\"display-6\">Register</div>\n        </div>\n        <div className=\"col-12\">\n          <TextInput\n            value={credentials.displayName}\n            onChange={(name, value) => handleChange(name, value)}\n            label=\"Name\"\n            name=\"displayName\"\n          />\n        </div>\n        <div className=\"col-12\">\n          <TextInput\n            value={credentials.email}\n            onChange={(name, value) => handleChange(name, value)}\n            label=\"E-Mail\"\n            name=\"email\"\n          />\n        </div>\n        <div className=\"col-12\">\n          <PasswordInput\n            value={credentials.password}\n            onChange={(name, value) => handleChange(name, value)}\n            label=\"Password\"\n            name=\"password\"\n          />\n        </div>\n        <div className=\"col-12\">\n          <PasswordInput\n            value={credentials.confirmPassword}\n            onChange={(name, value) => handleChange(name, value)}\n            label=\"Confirm Password\"\n            name=\"confirmPassword\"\n          />\n        </div>\n        <div className=\"col-12\">\n          <CustomButton type=\"submit\">Register with E-Mail</CustomButton>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default RegisterForm\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { selectCurrentUser } from 'Redux/user.selectors'\nimport { selectCartHidden } from 'Redux/cart.selectors'\nimport { auth } from 'Firebase/firebase.utils'\nimport { CartDropdown, CartIcon } from 'Components'\n\nconst Tabs = ({ currentUser, hidden }) => (\n  <div className=\"react-pills\">\n    <NavLink exact to=\"/\" activeClassName=\"active\">Home</NavLink>\n    <NavLink to=\"/store\" activeClassName=\"active\">Store</NavLink>\n    {\n      currentUser\n      ? <a onClick={() => auth.signOut()}>Logout</a>\n      : (\n        <>\n          <NavLink exact to=\"/login\" activeClassName=\"active\">Login</NavLink>\n          <NavLink exact to=\"/register\" activeClassName=\"active\">Register</NavLink>\n        </>\n      )\n    }\n    <NavLink exact to=\"/about\" activeClassName=\"active\">About</NavLink>\n    <CartIcon />\n    {\n      hidden\n      ? null\n      : <CartDropdown />\n    }\n  </div>\n)\n\nconst mapState = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  hidden: selectCartHidden\n})\n\nexport default connect(mapState)(Tabs)\n","import React from 'react'\n\nconst PasswordInput = ({ value, onChange, label, name }) => {\n  const handleChange = (e) => onChange(name, e.target.value)\n\n  return (\n    <div className=\"form-floating\">\n      <input className=\"form-control\" value={value} onChange={handleChange} type=\"password\" placeholder=\" \" />\n      <label>{label}</label>\n    </div>\n  )\n}\n\nexport default PasswordInput\n","import React from 'react'\n\nconst TextInput = ({ value, onChange, label, name }) => {\n  const handleChange = (e) => onChange(name, e.target.value)\n\n  return (\n    <div className=\"form-floating\">\n      <input className=\"form-control\" value={value} onChange={handleChange} type=\"text\" placeholder=\" \" />\n      <label>{label}</label>\n    </div>\n  )\n}\n\nexport default TextInput\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { selectCartItems, selectCartTotal } from 'Redux/cart.selectors'\nimport { clearCart } from 'Redux/cart.actions'\nimport { CheckoutItem, CustomButton } from 'Components'\n\nconst CheckoutPage = ({ cartItems, cartTotal, clearCart }) => (\n  <div className=\"container py-5\">\n    <div className=\"checkout-item\">\n      <div className=\"row\">\n        <div className=\"col-2\">IMAGE</div>\n        <div className=\"col-3\">NAME</div>\n        <div className=\"col-3\">QUANTITY</div>\n        <div className=\"col-2 text-end\">PRICE</div>\n        <div className=\"col-2 text-end\">DELETE</div>\n      </div>\n    </div>\n    {\n      cartItems.map((cartItem) => <CheckoutItem key={cartItem.id} cartItem={cartItem} />)\n    }\n    <div className=\"row justify-content-center pt-5\">\n      <div className=\"col-12\">\n        <div className=\"display-6 text-center mb-5\">\n          TOTAL: {new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(cartTotal)}\n        </div>\n      </div>\n      <div className=\"col-auto\">\n        <CustomButton onClick={clearCart}>\n          CLEAR ALL\n        </CustomButton>\n      </div>\n    </div>\n  </div>\n)\n\nconst mapState = createStructuredSelector({\n  cartItems: selectCartItems,\n  cartTotal: selectCartTotal\n})\n\nconst mapDispatch = (dispatch) => ({\n  clearCart: () => dispatch(clearCart())\n})\n\nexport default connect(mapState, mapDispatch)(CheckoutPage)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { selectCollectionSection } from 'Redux/collection.selectors'\nimport { CollectionItem } from 'Components'\n\nconst CollectionPage = ({ collection: { title, items } }) => (\n  <div className=\"collection-preview\">\n    <div className=\"display-6\">{title}</div>\n    <div className=\"preview\">\n      {\n        items.map((item) => (\n          <CollectionItem key={item.id} item={item} />\n        ))\n      }\n    </div>\n  </div>\n)\n\nconst mapState = (state, ownProps) => ({\n  collection: selectCollectionSection(ownProps.match.params.collectionName)(state)\n})\n\nexport default connect(mapState)(CollectionPage)\n","import React from 'react'\n\nimport { DirectoryMenu } from 'Components'\n\nconst HomePage = () => (\n  <div className=\"container py-5\">\n    <DirectoryMenu />\n  </div>\n)\n\nexport default HomePage\n","import React from 'react'\n\nimport { LoginForm } from 'Components'\n\nconst LoginPage = () => (\n  <div className=\"container w-300 py-5\">\n    <LoginForm />\n  </div>\n)\n\nexport default LoginPage\n","import React from 'react'\n\nimport { RegisterForm } from 'Components'\n\nconst RegisterPage = () => (\n  <div className=\"container w-300 py-5\">\n    <RegisterForm />\n  </div>\n)\n\nexport default RegisterPage\n","import { firestore, convertCollectionsSnapshotToMap } from 'Firebase/firebase.utils'\nimport { CollectionActionTypes } from 'Redux/collection.types'\n\nexport const fetchCollectionsStart = () => ({\n  type: CollectionActionTypes.FETCH_COLLECTIONS_START\n})\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n  type: CollectionActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n})\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n  type: CollectionActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n})\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection('collections')\n\n    dispatch(fetchCollectionsStart())\n\n    collectionRef.get()\n    .then((snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n\n      dispatch(fetchCollectionsSuccess(collectionsMap))\n    })\n    .catch((error) => {\n      dispatch(fetchCollectionsFailure(error.message))\n    })\n  }\n}\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route } from 'react-router-dom'\nimport { createStructuredSelector } from 'reselect'\n\nimport { fetchCollectionsStartAsync } from 'Redux/collection.actions'\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from 'Redux/collection.selectors'\nimport { CollectionPage } from 'Pages'\nimport { CollectionOverview } from 'Components'\n\nconst StorePage = ({ match, isCollectionFetching, isCollectionLoaded, fetchCollectionsStartAsync }) => {\n  useEffect(() => {\n    fetchCollectionsStartAsync()\n  }, [])\n\n  if (isCollectionFetching || !isCollectionLoaded) {\n    return (\n      <div className=\"mt-6 pt-6 text-center\">\n        Loading...\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"container py-5\">\n      <Route exact path={`${match.path}`} component={CollectionOverview} />\n      <Route path={`${match.path}/:collectionName`} component={CollectionPage} />\n    </div>\n  )\n}\n\nconst mapState = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionLoaded\n})\n\nconst mapDispatch = (dispatch) => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n})\n\nexport default connect(mapState, mapDispatch)(StorePage)\n","import React, { useEffect } from 'react'\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { setCurrentUser } from 'Redux/user.actions'\nimport { selectCurrentUser } from 'Redux/user.selectors'\nimport { auth, createUserProfileDocument } from 'Firebase/firebase.utils'\nimport { AboutPage, CheckoutPage, HomePage, LoginPage, RegisterPage, StorePage } from 'Pages'\nimport { Tabs } from 'Components'\n\nconst App = ({ currentUser, setCurrentUser }) => {\n  useEffect(() => {\n    const unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth)\n  \n        userRef.onSnapshot((snapshot) => {\n          setCurrentUser({\n            id: snapshot.id,\n            ...snapshot.data()\n          })\n        })\n      } else {\n        setCurrentUser(userAuth)\n      }\n\n      // uploadLocalJsonToFirebase('collections', collectionSectionsArray.map(({ title, items }) => {\n      //   return { title, items }\n      // }))\n    })\n\n    return () => {\n      unsubscribeFromAuth()\n    }\n  }, [])\n\n  return (\n    <Router>\n      <Tabs />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/store\" component={StorePage} />\n        <Route exact path=\"/checkout\" component={CheckoutPage} />\n        <Route exact path=\"/login\" render={() => currentUser ? <Redirect to=\"/\" /> : <LoginPage /> } />\n        <Route exact path=\"/register\" render={() => currentUser ? <Redirect to=\"/\" /> : <RegisterPage /> } />\n        <Route exact path=\"/about\" component={AboutPage} />\n      </Switch>\n    </Router>\n  )\n}\n\nconst mapState = createStructuredSelector({\n  currentUser: selectCurrentUser\n})\n\nconst mapDispatch = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user))\n})\n\nexport default connect(mapState, mapDispatch)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport { store, persistor } from 'Redux/store'\nimport App from 'App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}